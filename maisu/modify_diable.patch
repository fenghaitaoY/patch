diff --git a/fingerprint/client/libfprint/process/navigate.c b/fingerprint/client/libfprint/process/navigate.c
index 6a88d4d..7252e30 100644
--- a/fingerprint/client/libfprint/process/navigate.c
+++ b/fingerprint/client/libfprint/process/navigate.c
@@ -117,8 +117,8 @@ void * navigate_work(void *q) {
         ma_tac_detect_touch(PRESS_DETECT);
 #endif
         ma_tac_sleep();
-        dc_send_cmd(SLEEP);
         LOGD("go to kernel\n");
+        dc_send_cmd(SLEEP);
 
 		if ( qe->cancelled ) {
             LOGD("command cancelled\n");
diff --git a/fingerprint/client/libfprint/process/process.c b/fingerprint/client/libfprint/process/process.c
index 2bc9abc..fbfa973 100644
--- a/fingerprint/client/libfprint/process/process.c
+++ b/fingerprint/client/libfprint/process/process.c
@@ -123,6 +123,7 @@ static void *fingerprint_hal_main_thread(void *p)
         }
         LOGD("Command %s is running\n", _num2string(qe->state));
 
+        ma_tac_detect_touch(PRESS_DETECT);
         qe->cmd_process(qe);
        // ma_tac_calc_interrupt_para();
         if(sThreadExit){
diff --git a/fingerprint/include/config.h b/fingerprint/include/config.h
index 7ecf8c2..afd8888 100644
--- a/fingerprint/include/config.h
+++ b/fingerprint/include/config.h
@@ -33,7 +33,7 @@ enum bio_chip_id {
                 chip_id == SENSOR121 \
                 )
 
-#define FINGERPRINT_TEMPLATE_SIZE 0x100000
+#define FINGERPRINT_TEMPLATE_SIZE 800*1024
 
 
 
diff --git a/fingerprint/include/protocol.h b/fingerprint/include/protocol.h
index ef23ac0..4d6e695 100644
--- a/fingerprint/include/protocol.h
+++ b/fingerprint/include/protocol.h
@@ -126,7 +126,7 @@ typedef union {
 	} request;
 	struct {
 		int ret;
-		unsigned char image[MAX_IMAGE_SIZE*5];
+		unsigned char image[4];
 		int err;
 	} response;
 } protocol_enroll_t;
@@ -147,7 +147,7 @@ typedef union {
 	} request;
 	struct {
 		int touched;
-		unsigned char image[MAX_IMAGE_SIZE];
+		unsigned char image[4];
 		int err;
 	} response;
 } protocol_detect_touch_t;
@@ -159,7 +159,7 @@ typedef union {
 	struct {
 		int score;
 		int down;
-		unsigned char image[MAX_IMAGE_SIZE];
+		unsigned char image[4];
 		int err;
 	} response;
 } protocol_detect_touch_get_energy_t;
@@ -187,7 +187,7 @@ typedef union {
 		int ret;
 		int err;
 		hw_auth_token_t hat;
-		unsigned char image[MAX_IMAGE_SIZE*5];
+		unsigned char image[4];
 	} response;
 } protocol_authenticate_t;
 
diff --git a/fingerprint/service/soft_sensor/sensor96/algorithm/finger_detect.c b/fingerprint/service/soft_sensor/sensor96/algorithm/finger_detect.c
index b0a2a8f..9e59923 100644
--- a/fingerprint/service/soft_sensor/sensor96/algorithm/finger_detect.c
+++ b/fingerprint/service/soft_sensor/sensor96/algorithm/finger_detect.c
@@ -26,7 +26,9 @@ static void mean_var(u8 *img,double *feat)
 			}
 		}
 	}
-	mean /= count;
+    if(count != 0){
+	    mean /= count;
+    }
 	for(i = 1;i < Height-1;i++)
 	{
         for(j = 1;j < Width-1;j++)
@@ -38,7 +40,9 @@ static void mean_var(u8 *img,double *feat)
 		}
 	}
 
-	var /= count;
+    if(count != 0){
+	    var /= count;
+    }
 	feat[2] = mean;
 	feat[3] = var;
 }
@@ -171,11 +175,13 @@ static void clahe(u8* parry,u8* parry1)
 				sum++;
 			}
 		}
-	s[0] = (float) grayCount[0] / (float) sum;
-	//灰度转换
-	for (k = 1; k < 256; k++) {
-		s[k] = s[k - 1] + (float) grayCount[k] / (float) sum;
-	}
+    if(sum != 0){
+        s[0] = (float) grayCount[0] / (float) sum;
+        //灰度转换
+        for (k = 1; k < 256; k++) {
+            s[k] = s[k - 1] + (float) grayCount[k] / (float) sum;
+        }
+    }
 	for (i = 0; i < 256; i++) {
 		s2[i] = (int) (255 * s[i] + 0.5);
 	}
@@ -249,7 +255,11 @@ static void GaussianSmooth(u8* pGray, u8* pResult, double sigma)
 					dWeightSum += pdKernel[nLen + i];
 				}
 			}
-			pdTemp[y * Width + x] = dDotMul / dWeightSum;
+            if(dWeightSum != 0){
+			    pdTemp[y * Width + x] = dDotMul / dWeightSum;
+            }else{
+			    pdTemp[y * Width + x] = 0;
+            }
 		}
 	}
 
@@ -267,14 +277,21 @@ static void GaussianSmooth(u8* pGray, u8* pResult, double sigma)
 					  dWeightSum += pdKernel[nLen+i];
 				  }
 			  }
-          pResult[y*Width+x] = (unsigned char)dDotMul/dWeightSum;
+              if(dWeightSum != 0){
+                pResult[y*Width+x] = (unsigned char)dDotMul/dWeightSum;
+              }else {
+                pResult[y*Width+x] = 0;
+              }
 	   }
 	}
-
-    free(pdKernel);
-    free(pdTemp);
-	pdKernel = NULL;
-	pdTemp = NULL;
+    if(pdKernel != NULL){
+        free(pdKernel);
+        pdKernel = NULL;
+    }
+    if(pdTemp != NULL){
+        free(pdTemp);
+        pdTemp = NULL;
+    }
 }
 
 //计算方向
@@ -374,7 +391,11 @@ static void oritation(u8*img1,double per,double *feat)
 				}
 			}
 		}
-    feat[0] = (double)count/per;
+    if(per != 0){
+        feat[0] = (double)count/per;
+    }else{
+        feat[0] = 0;
+    }
 
 	for(i = 6;i < Height-6;i++)
         for(j = 6;j < Width-6;j++)
@@ -404,7 +425,10 @@ static void oritation(u8*img1,double per,double *feat)
 			}
 		}
     feat[1] = (double)(var_ori)/count1;
-	free(ori);
+    if(ori != NULL){
+	    free(ori);
+        ori = NULL;
+    }
 }
 
 //计算梯度
@@ -427,7 +451,9 @@ static double gradxy(u8*img1,int th)
 				if(grad>100) sum ++;
 			}
 		}
-    sum = sum*100/num;
+    if(num != 0){
+        sum = sum*100/num;
+    }
 	return sum;
 }
 
@@ -558,8 +584,14 @@ int fp96_finger_detect(unsigned char *img1)
 	else ret = per; //手指
 
 free_mem:
-	free(img2);
-	free(img3);
+    if(img2 != NULL){
+        free(img2);
+        img2 = NULL;
+    }
+    if(img3 != NULL){
+        free(img3);
+        img3 = NULL;
+    }
 
 	return ret;
 }
diff --git a/fingerprint/service/soft_sensor/sensor96/sensor_96.c b/fingerprint/service/soft_sensor/sensor96/sensor_96.c
index 9f14472..01b56e4 100644
--- a/fingerprint/service/soft_sensor/sensor96/sensor_96.c
+++ b/fingerprint/service/soft_sensor/sensor96/sensor_96.c
@@ -56,7 +56,7 @@ int fp96_create(int chipid, int cover_type) {
         }
         s_interrupt_delay_ms *= (0.25*2*(s_interrupt_framerow+1));
     }
-    platform_spi_set_speed(6);
+    platform_spi_set_speed(4);
     switch (cover_type) {
     case COVER_T:
         context_set_sensor96_capacity(0xfc);
