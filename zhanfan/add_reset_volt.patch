diff --git a/fingerprint/client/fingerprintso/ma_release_Jnifp.c b/fingerprint/client/fingerprintso/ma_release_Jnifp.c
index 3b1d220..bb0128a 100644
--- a/fingerprint/client/fingerprintso/ma_release_Jnifp.c
+++ b/fingerprint/client/fingerprintso/ma_release_Jnifp.c
@@ -26,6 +26,8 @@ jfieldID ecodeFid;
 
 static int notify(fingerprint_t *fp);
 
+static int alreadyAuth = 0;
+
 //初始化的时候会调进来一次，在这个方法里持有jvm的引用
 JNIEXPORT jint JNICALL JNI_OnLoad(JavaVM *vm, void *reserved){
 	LOGD(" start ");
@@ -155,6 +157,7 @@ JNIEXPORT jint JNICALL Java_ma_release_Jnifp_open
     (*env)->ReleaseStringUTFChars(env, path, fpath);
     set_notify(notify); //通知函数
     //ret = ma_tac_calibrate(); //添加校准,解决重启失效问题
+    ma_tac_register_volt();
 	LOGD("end \n");
 	return ret;
 }
@@ -227,6 +230,9 @@ JNIEXPORT jint JNICALL Java_ma_release_Jnifp_authenticate
   (JNIEnv *env, jclass cls){
 	LOGD("start \n");
 	int ret = 0;
+    if(!alreadyAuth){
+        ma_tac_register_volt();
+    }
     ret = bio_authenticate(0,0);
 	LOGD("end \n");
 	return ret;
@@ -295,6 +301,19 @@ JNIEXPORT jint JNICALL Java_ma_release_Jnifp_calibrate(JNIEnv *env, jclass cls){
 
 /*
  * Class:     ma_release_jnifp
+ * Method:    resetVolt
+ * Signature: ()I
+ */
+JNIEXPORT jint JNICALL Java_ma_release_Jnifp_resetVolt(JNIEnv *env, jclass cls){
+    LOGD("start");
+    int ret = 0;
+    usleep(5000);
+    ret = ma_tac_register_volt();
+    return ret;
+    LOGD("end");
+}
+/*
+ * Class:     ma_release_jnifp
  * Method:    calibrate
  * Signature: ()I
  */
diff --git a/fingerprint/client/fingerprintso/ma_release_Jnifp.h b/fingerprint/client/fingerprintso/ma_release_Jnifp.h
index 405a6c1..5f9a9ba 100644
--- a/fingerprint/client/fingerprintso/ma_release_Jnifp.h
+++ b/fingerprint/client/fingerprintso/ma_release_Jnifp.h
@@ -103,6 +103,9 @@ JNIEXPORT jint JNICALL Java_ma_release_Jnifp_calibrate
  */
 JNIEXPORT jint JNICALL Java_ma_release_Jnifp_testSPI
   (JNIEnv *, jclass);
+
+
+JNIEXPORT jint JNICALL Java_ma_release_Jnifp_resetVolt(JNIEnv *, jclass);
 #ifdef __cplusplus
 }
 #endif
diff --git a/fingerprint/client/libfprint/interface/ca_interface.c b/fingerprint/client/libfprint/interface/ca_interface.c
index c8cf55b..1119098 100644
--- a/fingerprint/client/libfprint/interface/ca_interface.c
+++ b/fingerprint/client/libfprint/interface/ca_interface.c
@@ -85,7 +85,7 @@ int init_navigate(void)
         set_idle_cmd(tap_work_active, NULL, PROCESS_NAVIGATE);
 #else
         if(s_chip_id == 83) {
-            set_idle_cmd(tap_work_active_afs83, NULL, PROCESS_NAVIGATE);
+            set_idle_cmd(navigate_work, NULL, PROCESS_NAVIGATE);
         } else {
             set_idle_cmd(navigate_work, NULL, PROCESS_NAVIGATE);
         }
@@ -261,7 +261,7 @@ int bio_init(void)
         bio_set_active_group(DEFAULT_USER_GROUP, DEFAULT_STORAGE_PATH);
     }
 
-    ma_tac_get_energy();//get bkg for factory test get image.
+    //ma_tac_get_energy();//get bkg for factory test get image.
     refresh_interrupt_parameters_timer();
     init_navigate();
     is_init = 1;
diff --git a/fingerprint/client/libfprint/process/navigate.c b/fingerprint/client/libfprint/process/navigate.c
index de54135..1758b80 100644
--- a/fingerprint/client/libfprint/process/navigate.c
+++ b/fingerprint/client/libfprint/process/navigate.c
@@ -293,8 +293,10 @@ void * tap_work_active_afs83(void *q)
         }
         interrupt_status = 0;
         while( count < th && interrupt_status == 0 ) {
+            LOGD("----------------------while get interrupt status------------\n");
             usleep(3000);
             dc_send_cmd_with_value(GET_INTERRUPT_STATUS, &interrupt_status);
+            LOGD("----------------------while get interrupt status------------interrupt_status = %d\n",interrupt_status);
             count++;
             if ( qe->cancelled ) {
                 LOGD("command cancelled\n");
diff --git a/fingerprint/client/libfprint/tac/microarray_tac.c b/fingerprint/client/libfprint/tac/microarray_tac.c
index 31fa719..0476609 100644
--- a/fingerprint/client/libfprint/tac/microarray_tac.c
+++ b/fingerprint/client/libfprint/tac/microarray_tac.c
@@ -246,6 +246,23 @@ int ma_tac_calibrate(void)
 	}
 	return 0;
 }
+
+/*配置电压值
+ *@return 0成功
+ */
+int ma_tac_register_volt(void){
+    protocol_volt_t msg;
+    LOGD("-----------register volt start --");
+    memset(&msg, 0,sizeof(protocol_volt_t));
+	ma_tac_security_invoke(PROTOCOL_VOLT, &msg, sizeof(protocol_volt_t));
+    if(msg.response.err){
+        LOGD("write fail---");
+        return -1;
+    }
+    LOGD("-----------register volt end --");
+    return 0;
+}
+
 /*计算中断检测参数
  * @return 0成功
  */
diff --git a/fingerprint/include/config.h b/fingerprint/include/config.h
index 7161c1c..24240b0 100644
--- a/fingerprint/include/config.h
+++ b/fingerprint/include/config.h
@@ -18,7 +18,7 @@
 
 #define DEFAULT_USER_GROUP                          0
 #define DEFAULT_STORAGE_PATH                        "/data/system/users/0/fpdata"
-#define DEFAULT_STORAGE_PROPERTY_PATH               "/data/system/ma_fingerprint"
+#define DEFAULT_STORAGE_PROPERTY_PATH               "/data/data/ma.fprint/files"
 
 enum navigation_result {
     NAVI_NONE          = 0,
diff --git a/fingerprint/include/protocol.h b/fingerprint/include/protocol.h
index 2fdb66a..da15c2e 100644
--- a/fingerprint/include/protocol.h
+++ b/fingerprint/include/protocol.h
@@ -37,6 +37,7 @@ enum {
 	PROTOCOL_REMOVE,
 	PROTOCOL_HAS_CALIBRATE,
 	PROTOCOL_CALIBRATE,
+	PROTOCOL_VOLT,
 	PROTOCOL_CALC_INTERRUPT_PARA,
 	PROTOCOL_DETECT_MODE,
 	PROTOCOL_SAVE_PARAS,
@@ -251,6 +252,16 @@ typedef union {
 		int ret;
 		int err;
 	} response;
+} protocol_volt_t;
+
+typedef union {
+	struct {
+		int unused;
+	} request;
+	struct {
+		int ret;
+		int err;
+	} response;
 } protocol_calc_interrupt_para_t;
 
 typedef union {
diff --git a/fingerprint/service/malib/Android.mk b/fingerprint/service/malib/Android.mk
index 87c4eec..be981e5 100644
--- a/fingerprint/service/malib/Android.mk
+++ b/fingerprint/service/malib/Android.mk
@@ -8,10 +8,10 @@ LOCAL_SRC_FILES := \
 	crypto/aes.c \
 	utils/bitmap_header.c \
 	utils/malib.c \
-	utils/mastring.c
-	#utils/masnprintf.c \
-	#utils/bitmap.c\
-	#pgm/pgm.c
+	utils/mastring.c \
+	utils/masnprintf.c \
+	utils/bitmap.c\
+	pgm/pgm.c
 
 LOCAL_MODULE := malib
 
diff --git a/fingerprint/service/protocol/protocol.c b/fingerprint/service/protocol/protocol.c
index 6f66583..b804399 100644
--- a/fingerprint/service/protocol/protocol.c
+++ b/fingerprint/service/protocol/protocol.c
@@ -320,6 +320,19 @@ static void protocol_calibrate(protocol_calibrate_t *data)
     }
 }
 
+static void protocol_volt(protocol_volt_t *data)
+{
+    int ret=0;
+    LOGD("-----------start----");
+    ret = sensor_reset_volt_parameters();
+    if(ret <0){
+        data->response.err = ret;
+    }else{
+        data->response.err = 0;
+    }
+    LOGD("-----------end-----");
+}
+
 static void protocol_calc_interrupt_para(protocol_calc_interrupt_para_t *data)
 {
     int ret = 0;
@@ -543,6 +556,7 @@ static inline const char* enum2str(int cmdnum)
         ENUM_TO_STR(PROTOCOL_UPDATE_AUTHENTICATE_DATA);
         ENUM_TO_STR(PROTOCOL_REMOVE);
         ENUM_TO_STR(PROTOCOL_CALIBRATE);
+        ENUM_TO_STR(PROTOCOL_VOLT);
         ENUM_TO_STR(PROTOCOL_CALC_INTERRUPT_PARA);
         ENUM_TO_STR(PROTOCOL_DETECT_MODE);
         ENUM_TO_STR(PROTOCOL_SAVE_PARAS);
@@ -606,6 +620,8 @@ void protocol_handle_plain_cmd(int cmd, void* data) {
             EASY_PROTOCOL(protocol_has_calibrate);
         case PROTOCOL_CALIBRATE:
             EASY_PROTOCOL(protocol_calibrate);
+        case PROTOCOL_VOLT:
+            EASY_PROTOCOL(protocol_volt);
         case PROTOCOL_CALC_INTERRUPT_PARA:
             EASY_PROTOCOL(protocol_calc_interrupt_para);
         case PROTOCOL_DETECT_MODE:
diff --git a/fingerprint/service/soft_sensor/include/sensor_adapter.h b/fingerprint/service/soft_sensor/include/sensor_adapter.h
index 1d1ad08..27868b4 100644
--- a/fingerprint/service/soft_sensor/include/sensor_adapter.h
+++ b/fingerprint/service/soft_sensor/include/sensor_adapter.h
@@ -77,6 +77,12 @@ typedef struct soft_sensor {
      *
      * */
     int (*sensor_has_calibrate)(void);
+    /*
+     *重新配置电压值
+     *@return SUCCESS:成功
+     *        FAIL:失败
+     */
+    int (*sensor_reset_volt_parameters)(void);
 
     /* 计算中断检测参数
      * @return  SUCCESS:成功
@@ -238,6 +244,7 @@ int sensor_powerdown_mode(void);
 int sensor_detect_mode(void);
 int sensor_has_calibrate(void);
 int sensor_calc_init_parameters(void);
+int sensor_reset_volt_parameters(void);
 int sensor_calc_interrupt_parameters(void);
 int sensor_reset_interrupt_parameters(void);
 int sensor_save_paras(void);
diff --git a/fingerprint/service/soft_sensor/sensor83/algorithm/removebkg.c b/fingerprint/service/soft_sensor/sensor83/algorithm/removebkg.c
index 3309eb5..cc2e321 100644
--- a/fingerprint/service/soft_sensor/sensor83/algorithm/removebkg.c
+++ b/fingerprint/service/soft_sensor/sensor83/algorithm/removebkg.c
@@ -24,65 +24,100 @@ static void preRmv( int* rawHead, int* bkgHead, s16* srcHead, unsigned char grey
     int tmp, tmpRaw, tmpBkg, tmpRow;
     int ave[80], ave_t1[80], ave_t2[80];
     int *pAve, *pAve_t;
-    int val = ((unsigned int)grey_offset << 4) | 0x0f + 1;
+    int val = (((unsigned int)grey_offset << 4) | 0x0f) + 1;
     //³õÊŒÒÆ³ý±³Ÿ°
+    //LOGD("----------------------------------PreRmv -----start----rawHead %d , bkgHead = %d val = %d  grey offset = %d ",*rawHead , *bkgHead, val, grey_offset);
     memset(ave,0,IMG_W*sizeof(int));
     pBkg=bkgHead, pRaw=rawHead, pSrc=srcHead;
     for ( row=0; row<IMG_H; row++ )
     {
         pAve=ave;
+        //LOGD("----------------------------------PreRmv -----for ---row = %d  pAve = %d",row, *pAve);
         for(col=0;col<IMG_W;col+=8,pBkg+=8,pRaw+=8,pSrc+=8,pAve+=8)
         {
+         //   LOGD("----------------------------------PreRmv -----pRaw[0]=%d", pRaw[0]);
             tmpRaw = val-pRaw[0];
             tmpBkg = val-pBkg[0];
+           // LOGD("----------------------------------PreRmv -----col=%d index=0 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=0 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[0] = tmp;
             pAve[0]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[1]=%d", pRaw[1]);
+
             tmpRaw = val-pRaw[1];
             tmpBkg = val-pBkg[1];
+            //LOGD("----------------------------------PreRmv -----col=%d index=1 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=1 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[1] = tmp;
             pAve[1]+=tmp;
+            //LOGD("----------------------------------PreRmv -----pRaw[2]=%d", pRaw[2]);
+
             tmpRaw = val-pRaw[2];
             tmpBkg = val-pBkg[2];
+            //LOGD("----------------------------------PreRmv -----col=%d index=2 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=2 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[2] = tmp;
             pAve[2]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[3]=%d", pRaw[3]);
             tmpRaw = val-pRaw[3];
             tmpBkg = val-pBkg[3];
+            //LOGD("----------------------------------PreRmv -----col=%d index=3 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=3 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[3] = tmp;
             pAve[3]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[4]=%d", pRaw[4]);
             tmpRaw = val-pRaw[4];
             tmpBkg = val-pBkg[4];
+            //LOGD("----------------------------------PreRmv -----col=%d index=4 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=4 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[4] = tmp;
             pAve[4]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[5]=%d", pRaw[5]);
             tmpRaw = val-pRaw[5];
             tmpBkg = val-pBkg[5];
+            //LOGD("----------------------------------PreRmv -----col=%d index=5 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=5 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[5] = tmp;
             pAve[5]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[6]=%d", pRaw[6]);
             tmpRaw = val-pRaw[6];
             tmpBkg = val-pBkg[6];
+            //LOGD("----------------------------------PreRmv -----col=%d index=6 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=6 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[6] = tmp;
             pAve[6]+=tmp;
+
+            //LOGD("----------------------------------PreRmv -----pRaw[7]=%d", pRaw[7]);
             tmpRaw = val-pRaw[7];
             tmpBkg = val-pBkg[7];
+            //LOGD("----------------------------------PreRmv -----col=%d index=7 tmpRaw=%d tmpBkg=%d", col,tmpRaw,tmpBkg);
             tmp = ((tmpBkg-tmpRaw)<<21)/(tmpRaw*tmpBkg);
+            //LOGD("----------------------------------PreRmv -----col=%d index=7 tmp=%d", col,tmp);
             tmp = (tmp>32767?32767:tmp);
             pSrc[7] = tmp;
             pAve[7]+=tmp;
         }
     }
+    //LOGD("----------------------------------PreRmv -----222----");
 
 
     // ÁÐË¥Œõ3ŽÎ
@@ -97,6 +132,7 @@ static void preRmv( int* rawHead, int* bkgHead, s16* srcHead, unsigned char grey
     }
     pAve_t[1] = ((pAve[1]+pAve[0])>>1);// 1
 
+    //LOGD("----------------------------------PreRmv ----3333-----");
     memcpy(ave,ave_t2,IMG_W*sizeof(int));
     pAve_t = ave_t2;
     pAve = ave;
@@ -106,6 +142,7 @@ static void preRmv( int* rawHead, int* bkgHead, s16* srcHead, unsigned char grey
     }
     pAve_t[1] = ((pAve[1]+pAve[0])>>1);// 2
 
+    //LOGD("----------------------------------PreRmv ----444-----");
     memcpy(ave,ave_t2,IMG_W*sizeof(int));
     pAve_t = ave_t2;
     pAve = ave;
@@ -116,6 +153,7 @@ static void preRmv( int* rawHead, int* bkgHead, s16* srcHead, unsigned char grey
     pAve_t[1] = ((pAve[1]+pAve[0])>>1);
 
 
+    //LOGD("----------------------------------PreRmv ----5555-----");
     // ÁÐÂË²š
     pSrc=srcHead;
     for(row=0;row<IMG_H;row++)
@@ -142,6 +180,7 @@ static void preRmv( int* rawHead, int* bkgHead, s16* srcHead, unsigned char grey
             pSrc[7] = (tmp>32767?32767:tmp);
         }
     }
+    //LOGD("----------------------------------PreRmv -----6666- end---");
 }
 
 void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead, unsigned char grey_offset)
@@ -153,8 +192,16 @@ void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead,
     int *pAveSub, *pVarSub, *pMaskBack, *pTmpMask;
     int aveTmp, midTmp, range, maxTmp, minTmp, maxGrey, minGrey;
     int enhanceRate, greyTmp;
+    static int num;
+    char name[100];
+    
+    sprintf(name, "/data/data/ma.fprint/files/bkg_0x%.2x.pgm",num);
+    save_pgm_file(name,(void*)imgRawBuf,80,128,4095);
+    num++;
 
+    LOGD("----------------------------fp83_remove_bkg -  dead  start ------num = bkg_0x%.2x.pgm ",num);
     preRmv( imgRawBuf, imgBkgBuf, srcHead, grey_offset );
+    LOGD("----------------------------fp83_remove_bkg -  dead  00000------");
 
     for ( i=0, pAveSub=(int*)expHead, pSrc=srcHead, minAveSub=0x7fffffff;
         i<SUB_H; i++, pAveSub+=SUB_W )
@@ -182,6 +229,7 @@ void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead,
     //subTH = minAveSub + 6*256;
     subTH = 384;
 
+    LOGD("----------------------------fp83_remove_bkg -  dead  22222 ------");
     for ( i=0, pAveSub=(int*)expHead, pVarSub=((int*)expHead)+SUB_SZ, pSrc=srcHead;
         i<SUB_H; i++, pAveSub+=SUB_W, pVarSub+=SUB_W )
     {
@@ -210,6 +258,7 @@ void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead,
         }
     }
 
+    LOGD("----------------------------fp83_remove_bkg -  dead  33333 ------");
     for ( i=0, pAveSub=(int*)expHead, pVarSub=((int*)expHead)+SUB_SZ, pMaskBack=((int*)expHead)+2*SUB_SZ;
         i<SUB_SZ; i++ )
     {
@@ -248,6 +297,7 @@ void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead,
         }
     }
 
+    LOGD("----------------------------fp83_remove_bkg -  dead  44444 ------");
     enhanceRate = ( maxGrey > minGrey ) ? ( 0x1000000 / (maxGrey-minGrey) ) : 0;
 
     for ( i=0, pExp=expHead, pSrc=srcHead; i<IMG_H; i++)
@@ -264,5 +314,6 @@ void fp83_remove_bkg( int* imgRawBuf, int* imgBkgBuf, u8* expHead, s16* srcHead,
             pExp[3] = ( greyTmp > 0xff ) ? 0xff : ( ( greyTmp > 0 ) ? greyTmp : 0 );
         }
     }
+    LOGD("----------------------------fp83_remove_bkg -  dead  end ------");
 
 }
diff --git a/fingerprint/service/soft_sensor/sensor83/sensor_83.c b/fingerprint/service/soft_sensor/sensor83/sensor_83.c
index 0a0119d..5806cc5 100644
--- a/fingerprint/service/soft_sensor/sensor83/sensor_83.c
+++ b/fingerprint/service/soft_sensor/sensor83/sensor_83.c
@@ -140,6 +140,21 @@ int fp83_powerdown_mode(void)
     return SUCCESS;
 }
 
+int fp83_reset_volt_parameters(void)
+{
+    unsigned char drefdrv = 0, refdrvsel = 0;
+    LOGD("----------------start ------");
+    /*context_get_sensor83_refdrvsel(&refdrvsel);
+    context_get_sensor83_drefdrv(&drefdrv);
+    LOGD("---------refdrvsel = %d , drefdrv = %d ", refdrvsel,drefdrv);
+    sensor_set_register(MA_83_REF_DRV_SEL_REG, refdrvsel);
+    sensor_set_register(MA_83_DREF_DRV_SEL_REG, drefdrv);
+    */
+    fp83_reset_mode();
+    LOGD("-----------set volt end----");
+    return SUCCESS;
+}
+
 static int fp83_detect_mode_parameters(
         int startline, int currentline, int endline, int linestep, int framerow,
         int n, int a, int type)
@@ -847,7 +862,9 @@ int fp83_calc_interrupt_parameters(void)
         n = value + g_config.interrupt_th;
     }
     s_sensor_mode = DETECT_MODE;
-    context_set_sensor83_interrupt_param(n, a);
+    if(n != 0x3c){
+        context_set_sensor83_interrupt_param(n, a);
+    }
     fp83_detect_mode();
     LOGD("end, ret=%d, n = 0x%x, a = 0x%x, interrupt_th=%d.\n", ret, n, a, g_config.interrupt_th);
     return ret;
diff --git a/fingerprint/service/soft_sensor/sensor83/sensor_83.h b/fingerprint/service/soft_sensor/sensor83/sensor_83.h
index e904df5..a3464c6 100644
--- a/fingerprint/service/soft_sensor/sensor83/sensor_83.h
+++ b/fingerprint/service/soft_sensor/sensor83/sensor_83.h
@@ -15,6 +15,7 @@ int fp83_detect_mode(void);
 int fp83_reset_mode(void);
 int fp83_capture_mode(void);
 int fp83_powerdown_mode(void);
+int fp83_reset_volt_parameters(void);
 
 int fp83_read_image(int *buf, int len, int line_step);
 
diff --git a/fingerprint/service/soft_sensor/sensor83/sensor_context.c b/fingerprint/service/soft_sensor/sensor83/sensor_context.c
index f5b37e4..280f61c 100644
--- a/fingerprint/service/soft_sensor/sensor83/sensor_context.c
+++ b/fingerprint/service/soft_sensor/sensor83/sensor_context.c
@@ -63,6 +63,7 @@ int init_sensor83_context(void)
 
 int save_sensor83_context(void)
 {
+    LOGD("----------------------------------save_sensor83_context----------------");
     return policy_set_sensor_para(SNESOR_CONTEXT_PROPERTY_NAME, &s_sensor_ctx.property, sizeof(sensor_property_t));
 }
 
diff --git a/fingerprint/service/soft_sensor/sensor83/sensor_wrapper.c b/fingerprint/service/soft_sensor/sensor83/sensor_wrapper.c
index 3413716..64f33ec 100644
--- a/fingerprint/service/soft_sensor/sensor83/sensor_wrapper.c
+++ b/fingerprint/service/soft_sensor/sensor83/sensor_wrapper.c
@@ -225,6 +225,18 @@ static int sensor83_destory(void)
     return fp83_destory();
 }
 
+/*
+ *配置电压值
+ *@return SUCCESS:成功
+ *        FAIL:成功
+ */
+static int sensor83_reset_volt_parameters(void)
+{
+    int ret ;
+    ret = fp83_reset_volt_parameters();
+    return ret;
+}
+
 /******************************internal functions******************************/
 
 static int sensor83_capture_mode(void)
@@ -311,6 +323,7 @@ static int algorithm83_press_detect_texture(void *image, int type)
 	int *image_in = (int *)image;
 	LOGD("detect type = %d", type);
 	count = fp83_press_detect(image_in, context_get_sensor83_bkg(), g_sensor83_grey_offset);
+	LOGD("---------------------------detect count = %d", count);
 
 	switch(type) {
 	case AUTHENTICATE_DETECT:
@@ -325,13 +338,16 @@ static int algorithm83_press_detect_texture(void *image, int type)
 	    break;
 	}
 	if(ret == NORMAL_PRESSED) {
+        LOGD("-----------------------------------dead----------");
 	    fp83_remove_bkg(image_in, context_get_sensor83_bkg(),
 	            g_auth_ctx->remove_bkg_img, g_enroll_ctx->proc_buf, g_sensor83_grey_offset);
 
+        LOGD("-----------------------------------dead---2-------");
 	    if ((count - g_enroll_ctx->max_count) > (IMAGE_SIZE - g_enroll_ctx->max_count) / 10) {
             memcpy(g_enroll_ctx->max_image, image_in, sizeof(g_enroll_ctx->max_image));
             g_enroll_ctx->max_count = count;
         }
+        LOGD("-----------------------------------dead--------3--");
 	}
 	LOGD("***count=%d, ret=%d grey offset=%d\n", count, ret, g_sensor83_grey_offset);
 	return ret;
@@ -942,6 +958,7 @@ int init_sensor83(soft_sensor_t *sensor) {
     sensor->sensor_reset_interrupt_parameters   = sensor83_reset_interrupt_parameters;
     sensor->sensor_save_paras                   = sensor83_save_paras;
     sensor->sensor_read_line                    = sensor83_read_line;
+    sensor->sensor_reset_volt_parameters        = sensor83_reset_volt_parameters;
 
     sensor->algorithm_enroll_start              = algorithm83_enroll_start;
     sensor->algorithm_enroll                    = algorithm83_enroll;
diff --git a/fingerprint/service/soft_sensor/sensor_adapter.c b/fingerprint/service/soft_sensor/sensor_adapter.c
index 81b14b5..d62eda5 100644
--- a/fingerprint/service/soft_sensor/sensor_adapter.c
+++ b/fingerprint/service/soft_sensor/sensor_adapter.c
@@ -115,6 +115,11 @@ int sensor_has_calibrate(void)
 	return g_soft_sensor.sensor_has_calibrate();
 }
 
+int sensor_reset_volt_parameters(void)
+{
+    return g_soft_sensor.sensor_reset_volt_parameters();
+}
+
 int sensor_calc_interrupt_parameters(void)
 {
     return g_soft_sensor.sensor_calc_interrupt_parameters();
